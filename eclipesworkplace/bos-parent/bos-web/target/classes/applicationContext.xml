<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx" 
 xmlns:jaxws="http://cxf.apache.org/jaxws"
xmlns:soap="http://cxf.apache.org/bindings/soap"
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
 http://cxf.apache.org/bindings/soap http://cxf.apache.org/schemas/configuration/soap.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
	<!-- 扫描db.properties文件 -->
	<context:property-placeholder location="classpath:dp.properties"/>
<!-- 先创建连接池子对象 ，使用配置文件db.properties-->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean> 

   <!-- 配置localSecctionFactory 把sessionfactory交给spring来管理 -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
  		<!-- 导入数据库连接的信息 -->
   		<property name="dataSource" ref="dataSource"/>
   		<!-- 配置hibernate核心信息信息 -->
   		<property name="hibernateProperties">
   			<props>
			  	<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
		  		<prop key="hibernate.show_sql">true</prop>
		  		<prop key="hibernate.format_sql">true</prop>
		  		<prop key="hibernate.hbm2ddl.auto">update</prop>
   			</props>
   		</property>
   		<!-- 导入orm源数据，导入指定的包 -->
   		<property name="mappingLocations" >
   			<list>
				<value>classpath:/com/heima/bos/entity/*.xml</value>
			</list>
   		</property>
   </bean>
   
   <!-- 配置hibernate核心事务管理 -->
   <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
   		<property name="sessionFactory" ref="sessionFactory"/>
   </bean>
   <!-- 开启注解扫描-->
   <context:component-scan base-package="com.heima"/>
   
   <!-- 开启事物通知 -->
  <tx:annotation-driven/> 
   <!-- 开启支持 spring注解-->
   <context:annotation-config/>
   <!-- 配置客户端代理 -->
   <jaxws:client id="myCustomerService" 
   				address="http://localhost:8080/bos_crm/service/customer"
   				serviceClass="com.heima.service.CustomerService"/>
   				
   <!-- 配置shiro -->
   	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
   	<!-- 注入安全管理模块 -->
   	<property name="securityManager" ref="securityManager"/>
   	<property name="loginUrl" value="/login.jsp"></property> 
	<property name="successUrl" value="/index.jsp"></property> 
	<property name="unauthorizedUrl" value="/error.jsp"></property> 
	<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/validatecode.jsp* = anon
				/login.jsp = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff-list"]
				/* = authc
			</value>
		</property>
   	</bean>
   	<!-- 注入安全管理模块对象 -->
   	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
   		<property name="realm" ref="bosrealm"></property>
   		<property name="cacheManager" ref="cacheManager"></property>
   	</bean>
   	<!-- 注册realm对象 -->
   	<bean id="bosrealm" class="com.heima.realm.BOSrealm"></bean>
   	
   <!-- 开启shior注解控制权限 -->
   <!-- 开启注解支持 -->
   <bean  id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
   		<property name="proxyTargetClass" value="true"></property>
   </bean>
    
   <!-- 配置shoir提供的切面类 用于创建代理对象 -->
   <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
   </bean>
   <!-- 注册缓存管理器 -->
  	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
  		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml">
  		</property>
  	</bean>
  	
  	
  	<!-- 配置任务类 -->
	<bean id="myJob" class="com.heima.service.MailJob">
		<property name="username" value="liuzihao_lhm@163.com"/>
		<!-- 临时密码 -->
		<property name="password" value="liuzihao123"/>
		<property name="smtpServer" value="smtp.163.com"/>
	</bean>
	<!-- 配置作业详情 -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJob"></property>
		<property name="targetMethod" value="execute"></property>
	</bean>
	<!-- 配置触发器 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!--  注入作业详情 -->
		<property name="jobDetail" ref="jobDetail"></property>
		<property name="cronExpression">
			<value>* * * * * ? 2020</value>
		</property>
	</bean>
	<!-- 配置任务调度工厂 -->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- 注入触发器 -->
		<property name="triggers">
			<list>
				<ref bean="cronTrigger"/>
			</list>
		</property>
	</bean>
</beans>